#include <stdio.h>
#include <wiringPiI2C.h>
#include <wiringPi.h>
#include <unistd.h>
#include <stdint.h>

// ICM-20948 I2C address
#define ICM20948_ADDRESS 0x68

// ICM-20948 Register Addresses (Bank 0)
#define WHO_AM_I           0x00
#define ACCEL_XOUT_H       0x2D
#define ACCEL_YOUT_H       0x2F
#define ACCEL_ZOUT_H       0x31
#define GYRO_XOUT_H        0x33
#define GYRO_YOUT_H        0x35
#define GYRO_ZOUT_H        0x37
#define MAG_XOUT_L         0x11 // Magnetometer registers are in a different address range
#define PWR_MGMT_1         0x06
#define USER_CTRL          0x03
#define REG_BANK_SEL       0x7F
#define MAG_CNTL2          0x31 // Magnetometer Control Register 2
#define MAG_MODE_SINGLE    0x01 // Magnetometer single measurement mode
#define AK09916_I2C_ADDR   0x0C // AK09916 Magnetometer I2C address


// Helper function to read two bytes and combine them
int16_t read_word_2c(int fd, int reg) {
    int16_t high = wiringPiI2CReadReg8(fd, reg);
    int16_t low = wiringPiI2CReadReg8(fd, reg + 1);
    return (high << 8) + low;
}

// Function to initialize the ICM-20948
void icm20948_init(int fd) {
    wiringPiI2CWriteReg8(fd, PWR_MGMT_1, 0x01); // Wake up device and select auto-select clock source
    delay(100); // Delay for stabilization
}

// Function to switch register banks
void icm20948_select_bank(int fd, int bank) {
    wiringPiI2CWriteReg8(fd, REG_BANK_SEL, bank << 4);
}

// Function to initialize the magnetometer (AK09916)
void ak09916_init(int fd) {
    icm20948_select_bank(fd, 3); // Switch to register bank 3
    wiringPiI2CWriteReg8(fd, MAG_CNTL2, MAG_MODE_SINGLE); // Set single measurement mode
    icm20948_select_bank(fd, 0); // Switch back to bank 0
    delay(100); // Wait for measurement to complete
}

// Function to read magnetometer data
void read_magnetometer(int fd, int16_t *mx, int16_t *my, int16_t *mz) {
    ak09916_init(fd);
    *mx = read_word_2c(fd, MAG_XOUT_L);
    *my = read_word_2c(fd, MAG_XOUT_L + 2);
    *mz = read_word_2c(fd, MAG_XOUT_L + 4);
}

int main() {
    int fd = wiringPiI2CSetup(ICM20948_ADDRESS);

    if (fd == -1) {
        printf("Failed to initialize I2C device.\n");
        return -1;
    }

    icm20948_init(fd);

    while (1) {
        // Read accelerometer data
        int16_t accel_x = read_word_2c(fd, ACCEL_XOUT_H);
        int16_t accel_y = read_word_2c(fd, ACCEL_YOUT_H);
        int16_t accel_z = read_word_2c(fd, ACCEL_ZOUT_H);

        // Read gyroscope data
        int16_t gyro_x = read_word_2c(fd, GYRO_XOUT_H);
        int16_t gyro_y = read_word_2c(fd, GYRO_YOUT_H);
        int16_t gyro_z = read_word_2c(fd, GYRO_ZOUT_H);

        // Read magnetometer data
        int16_t mag_x, mag_y, mag_z;
        read_magnetometer(fd, &mag_x, &mag_y, &mag_z);

        // Print sensor data
        printf("Accel: X=%d Y=%d Z=%d | ", accel_x, accel_y, accel_z);
        printf("Gyro: X=%d Y=%d Z=%d | ", gyro_x, gyro_y, gyro_z);
        printf("Mag: X=%d Y=%d Z=%d\n", mag_x, mag_y, mag_z);

        delay(100); // Delay 50 ms
    }

    return 0;
}

